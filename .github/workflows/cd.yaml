name: Deploy

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  manage-release:
    name: 'Manage Release'
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: go
          package-name: exiledb

  build:
    name: "Build"
    needs: manage-release
    if: needs.manage-release.outputs.release_created == 'true'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: linux-amd64
          - os: windows-latest
            name: windows-amd64
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      - name: Install build dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Build binary
        shell: bash
        run: |
          output_name="exiledb-${{ matrix.name }}"
          if [ "$RUNNER_OS" = "Windows" ]; then
            output_name="${output_name}.exe"
          fi
          go build -o "${output_name}" ./cmd/exiledb

      - name: Upload to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.manage-release.outputs.tag_name }}
          files: exiledb-${{ matrix.name }}${{ runner.os == 'Windows' && '.exe' || '' }}
